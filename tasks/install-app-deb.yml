---
- name: Installing dependencies for Debian
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - gnupg2
    - curl
    - software-properties-common
    - apt-transport-https
    - ca-certificates
    - python3-pip
    - bash-completion
    - python3-kubernetes
    - open-iscsi
  become: true
  when: ansible_os_family == 'Debian'

- name: Create keyring dir
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Install and configure containerd for Debian
  when: ansible_os_family == 'Debian'
  become: true
  block:
    - name: Adding repo keys
      ansible.builtin.get_url:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Adding repo for containerd
      when: ansible_os_family == 'Debian' and ansible_architecture == 'x86_64'
      ansible.builtin.apt_repository:
        repo: "{{ repo_info }} {{ repo_url }}"
        filename: docker
        update_cache: true
        state: present
      vars:
        repo_info: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc]"
        repo_url: "https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable"

    - name: Adding repo for containerd
      when: ansible_os_family == 'Debian' and ansible_architecture == 'aach64'
      ansible.builtin.apt_repository:
        repo: "{{ repo_info }} {{ repo_url }}"
        filename: docker
        update_cache: true
        state: present
      vars:
        repo_info: "deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.asc]"
        repo_url: "https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} stable"

    - name: Installing containerd
      ansible.builtin.apt:
        name: containerd
        state: present
      become: true

    - name: Make sure containerd directory exists
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: '0755'
      become: true

    - name: Configuring containerd by adding the default config
      ansible.builtin.copy:
        src: config.toml
        dest: /etc/containerd/config.toml
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      become: true

    - name: Reload containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: true
      become: true

- name: Add Kubernetes apt gpg to trusted repository key
  ansible.builtin.get_url:
    url: https://pkgs.k8s.io/core:/stable:/v{{ k8s_installation_kubernetes_version }}/deb/Release.key
    dest: /etc/apt/trusted.gpg.d/kuberntes.asc
    mode: '0644'
    force: true
  become: true

- name: Adding repo for kubetools
  when: ansible_os_family == 'Debian'
  ansible.builtin.apt_repository:
    repo: "deb https://pkgs.k8s.io/core:/stable:/v{{ k8s_installation_kubernetes_version }}/deb/ /"
    filename: kubernetes
    update_cache: true
    state: present
  become: true

- name: Installing all required kubetools on version "{{ k8s_installation_kubernetes_version }}"
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    allow_downgrade: true
  loop:
    - kubelet
    - kubeadm
    - kubectl
  when: ansible_os_family == 'Debian'
  become: true

- name: Mark the packages as hold
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl
  become: true

- name: Set defaults for bash_comletion on node
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    state: present
    block: |
      if [ -f /etc/bash_completion ]; then
         . /etc/bash_completion
      fi
      source <(kubectl completion bash)
