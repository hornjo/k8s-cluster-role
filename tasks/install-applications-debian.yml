---
- name: Installing dependencies for Debian
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - gnupg2
    - software-properties-common
    - apt-transport-https
    - ca-certificates
    - python3-pip
    - bash-completion
  when: ansible_os_family == 'Debian'

- name: Install and configure containerd for Debian
  when: ansible_os_family == 'Debian'
  block:
    - name: Adding repo key for containerd
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adding repo for containerd
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Installing containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present

    - name: Configuring containerd by adding the default config
      ansible.builtin.copy:
        src: config.toml
        dest: /etc/containerd/config.toml
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      notify: Reload containerd

- name: Install all required kubetools
  block:
    - name: Adding repo keys for the kubetools
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        state: present
      when: ansible_os_family == 'Debian'

    - name: Adding repo for kubetools
      ansible.builtin.apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
      when: ansible_os_family == 'Debian'

    - name: Installing all required kubetools on version "{{ k8s_installation_kubernetes_version }}"
      ansible.builtin.apt:
        name: "{{ item }}-{{ k8s_installation_kubernetes_version }}"
        state: present
        allow_downgrade: true
      loop:
        - kubelet
        - kubeadm
        - kubectl
      when: ansible_os_family == 'Debian' and k8s_installation_kubernetes_version != "latest"

    - name: Mark the packages as hold
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

- name: Set defaults for bash_comletion on node
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    state: present
    block: |
      if [ -f /etc/bash_completion ]; then
         . /etc/bash_completion
      fi
      source <(kubectl completion bash)

- name: Installing Kubernetes python for ansible usage
  ansible.builtin.pip:
    name: kubernetes
    state: present
  become: true
