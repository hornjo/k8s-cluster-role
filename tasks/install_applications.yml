---
- name: Installing dependencies
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - gnupg2
    - software-properties-common
    - apt-transport-https
    - ca-certificates
    - python3-pip
    - bash-completion

- name: Install and configure containerd
  block:
    - name: Adding repo key for containerd
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adding repo for containerd
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Installing containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present

    - name: Configuring containerd by adding the default config
      ansible.builtin.copy:
        src: ../templates/config.toml
        dest: /etc/containerd/config.toml
        owner: user
        group: user
        mode: '0644'

    - name: Reload service for containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: true

- name: Install all required kubetools
  block:
    - name: Adding repo keys for the kubetools
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding repo for kubetools
      ansible.builtin.apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Update all packages
      ansible.builtin.apt:
        update_cache: true

    - name: Installing all required kubetools at latest version
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
      when: kubernetes_version == "latest"

    - name: Installing all required kubetools on version "{{ kubernetes_version }}"
      ansible.builtin.apt:
        name: "{{ item }}={{ kubernetes_version }}"
        state: present
        allow_downgrade: true
      loop:
        - kubelet
        - kubeadm
        - kubectl
      when: kubernetes_version != "latest"

    - name: Mark the packages as hold
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

- name: Set defaults for bash_comletion on node
  ansible.builtin.blockinfile:
    path: ~/.bashrc
    block: |
      if [ -f /etc/bash_completion ]; then
         . /etc/bash_completion
      fi
      source <(kubectl completion bash)"

- name: Setting up kubectl autocompletion
  ansible.builtin.command: source ~/.bashrc
  register: bash_completion
  changed_when: bash_completion.rc == 0

- name: Installing Kubernetes python for ansible usage
  ansible.builtin.pip:
    name: kubernetes
    state: present
